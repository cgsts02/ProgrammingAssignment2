library(swirl)
install.packages("curl",dependencies = TRUE)
install.packages("httr", dependencies = TRUE)
install.packages("swirl", dependencies = TRUE)
library("swirl")
select_language()
install_course_github("ifunam", "programacion-estadistica-r")
Sys.setlocale("LC_ALL", "en_US.UTF-8")
swirl()
help("apply")
mi.matrix <- matrix(data=1:16,nrow=4, ncol=4)
mi_matrix <- matrix(data=1:16,nrow=4, ncol=4)
mi_matriz <- matrix(data=1:16,nrow=4, ncol=4)
mi_matriz
apply(X=mi_matriz, MARGIN=2, FUN=min)
})
apply(X=mi_matriz, MARGIN=1, FUN=min)
mi_lista <- c("Introducción", "a", "la", "Programación", "Estadística", "con", "R")
mi_lista <- list("Introducción", "a", "la", "Programación", "Estadística", "con", "R")
mi_lista
f
lapply()
lapply(mi_lista)
mi_lista
formals(lapply)
mayusculas <- lapply(mi_lista, toupper)
mayusculas
class(mayusculas)
read.csv("swirl")
read.csv("swirl_temp/ASA_estadisticaspasajeros(3).csv")
read.csv()
?read.csv()
read.csv("swirl_temp/ASA_estadisticaspasajeros(3).csv", header = FALSE, sep = "", quote = "\"'", dec = ".")
info()
read.csv("asa_datos", header = FALSE, sep = "", quote = "\"'", dec = ".")
read.csv("swirl_temp/ASA_estadisticaspasajeros(3).csv", header = FALSE, sep = "", quote = "\"'", dec = "." fill = TRUE, comment.char = "", ...)
asa_datos <- read.csv("swirl_temp/nombre de archivo")
asa_datos <- read.csv("swirl_temp/ASA_estadisticaspasajeros(3).csv")
asa_datos <- read.csv("swirl_temp/ASA_estadisticasPasajeros(3).csv")
asa_datos
View(asa_datos)
lapply(asa_datos, class)
asa_datos$Descripcion
unique(asa_datos$Descripcion)
unique(asa_datos$Estado)
sum(asa_datos$Pasajeros.internacionales)
sum(asa_datos$Pasajeros.nacionales)
asa_pasajeros <- asa_datos[,c("Pasajeros.nacionales", "Pasajeros.internacionales")]
View(asa_pasajeros)
lapply(asa_pasajeros, sum)
total_pasajeros <- sapply(asa_pasajeros, sum)
total_pasajeros
table(asa_datos$Estado)
tapply(asa_datos$Pasajeros.nacionales, asa_datos$Estado, sum)
mean(asa_datos)
tapply(asa_datos$Pasajeros.nacionales, asa_datos$Codigo.IATA, mean)
bye()
swirl()
library("swirl")
swirl()
demo(graphics)
plot(1:5)
plot(c(1,2,3), c(4,5,6))
?plot
plot(c(1,2,3), c(4,5,6), type="l")
(6:10)
plot(6:10, type="b")
plot(6:10, type="o")
plot(6:10, type="h")
plot(6:10, type="c")
plot(6:10, type="s")
plot(1:10, type="o")
plot(1:10, type="b")
plot(1:5, main="Mi gráfica")
plot(1:5, main="Mi gr<U+00E1>fica")
swirl
library("swirl")
swirl()
Sys.setlocale("LC_ALL", "en_US.UTF-8")
plot(1:5, main="Mi gr<U+00E1>fica", xlab = "x", xlab)
plot(1:5, main="Mi gr<U+00E1>fica", xlab = "x", ylab="y")
plot(1:5, main="Mi gr<U+00E1>fica", xlab = "x", ylab = "y")
plot(1:5, main="Mi gráfica")
plot(1:5, main="Mi gráfica", xlab = "x", ylab = "y")
points(c(1,5), c(4,2), col="green")
lines(c(1,4), c(2,5), col="yellow")
abline(h=3, col="red", lty=2)
abline(h=1:5, v=1:5, col="purple")
data("iris")
iris
class(iris)
head(iris)
plot(iris)
plot(iris$Petal.Length, iris$Petal.Width)
hist(iris$Petal.Length, col="red")
hist(iris$Petal.Length, col="red", freq = FALSE)
hist(iris$Petal.Length, col="red", breaks = 5)
boxplot()
?boxplot
boxplot(Sepal.Width ~ Species, data=iris, col=2:4)
pie(c(50,50,50), labels = levels(iris$Species))
?par
par()
par_orig <- par()
par("col")
par(col="blue")
data("iris")
plot(iris)
par(col)
par("col")
plot(iris, col=iris$Species)
names(iris)
plot(iris$Sepal.Length, iris$Petal.Length, col=iris$Species)
par(pch=15)
plot(iris$Sepal.Length, iris$Petal.Length, col=iris$Species)
plot(iris$Sepal.Length, iris$Petal.Length, col=iris$Species, pch="A")
plot(iris$Sepal.Length, iris$Petal.Length, col=iris$Species, pch="¿")
plot(iris$Sepal.Length, iris$Petal.Length, col=iris$Species)
plot(1:26, pch=0:25)
plot(iris$Sepal.Length, iris$Petal.Length, col=iris$Species, pch=21, bg="blue")
plot(iris$Sepal.Length, iris$Petal.Length, col=iris$Species, cex=2)
legend(x=4.5, y=7, legend= levels(iris$Species))
legend(x=4.5, y=7, legend= levels(iris$Species), col=(1:3))
legend(x=4.5, y=7, legend= levels(iris$Species), col=(1:3), pch=16)
legend(x=4.5, y=7, legend= levels(iris$Species), col=c(1:3), pch=16)
par(par_orig)
colors()
help("grep")
grep("yellow", colors(), value=TRUE)
grep("yellow", colors(), value=TRUE, length())
length(colors)
length(colors())
palette()
plot(1:8, col=1:8, main="Colores por índice", pch=17, cex=3)
plot(1:12, col=1:12, main="Colores reciclados", pch=1, cex=3)
plot(1:12, col=1:12, main="Colores reciclados", pch=2, cex=3)
plot(1:12, col=1:12, main="Colores reciclados", pch=3, cex=3)
plot(1:12, col=1:12, main="Colores reciclados", pch=4, cex=3)
plot(1:12, col=1:12, main="Colores reciclados", pch=5, cex=3)
plot(1:12, col=1:12, main="Colores reciclados", pch=6, cex=3)
plot(1:12, col=1:12, main="Colores reciclados", pch=7, cex=3)
plot(1:12, col=1:12, main="Colores reciclados", pch=8, cex=3)
plot(1:12, col=1:12, main="Colores reciclados", pch=9, cex=3)
plot(1:12, col=1:12, main="Colores reciclados", pch=10, cex=3)
plot(1:12, col=1:12, main="Colores reciclados", pch=11, cex=3)
plot(1:12, col=1:12, main="Colores reciclados", pch=12, cex=3)
plot(1:12, col=1:12, main="Colores reciclados", pch=13, cex=3)
plot(1:12, col=1:12, main="Colores reciclados", pch=14, cex=3)
plot(1:12, col=1:12, main="Colores reciclados", pch=15, cex=3)
plot(1:12, col=1:12, main="Colores reciclados", pch=16, cex=3)
plot(1:12, col=1:12, main="Colores reciclados", pch=17, cex=3)
plot(1:12, col=1:12, main="Colores reciclados", pch=18, cex=3)
paleta_arcoiris <- rainbow(10)
paleta_arcoiris
palette(paleta_arcoiris)
palette()
plot(1:10, col=1:10, main="Paleta Arcoiris", pch=17, cex=3)
paleta_calida <- heat.colors(10)
palette(paleta_calida)
plot(1:10, col=1:10, main="Paleta Cálida", pch=17, cex=3)
mi_paleta <- c("red", "green", "#0019FFFF")
plot(1:10, col=mi_paleta, main="Mi paleta", pch=17, cex=3)
plot(1:10, col=mi_paleta, main="Mi Paleta", pch=17, cex=3)
palette(mi_paleta)
plot(1:10, col=mi_paleta, main="Mi Paleta", pch=17, cex=3)
plot(1:10, col=1:10, main="Mi Paleta", pch=17, cex=3)
palette("default")
swirl()
swirl()
install.packages("rgl")
swirl()
swirl()
swirl()
install.packages("rgl")
swirl()
data("iris")
head(iris)
x <- iris$Sepal.Length
x <- iris$Sepal.Length
y <- iris$Petal.Length
z <- iris$Sepal.Width
?rgl
opend3d()
open3d()
plot3d(iris$Sepal.Length, iris$Petal.Length, iris$Sepal.Width)
plot3d(iris$Sepal.Length, iris$Petal.Length, iris$Sepal.Width, type="s")
install.packages("rgl")
install.packages("rgl")
plot3d(iris$Sepal.Length, iris$Petal.Length, iris$Sepal.Width, type="s")
swirl
swirl()
library("swirl")
swirl()
plot3d(iris$Sepal.Length, iris$Petal.Length, iris$Sepal.Width, type="s", col=rainbow(150))
bye()
library("swirl")
swirl()
Sys.setlocale("LC_ALL", "en_US.UTF-8")
Sys.setlocale("LC_ALL", "en_US.UTF-8")
bye()
Sys.setlocale("LC_ALL", "en_US.UTF-8")
swirl()
data("iris")
head(iris)
x <- iris$Sepal.Length
y <- iris$Petal.Length
z <- iris$Sepal.Width
?rgl
open3d()
plot3d(iris$Sepal.Length, iris$Petal.Length, iris$Sepal.Width)
Sys.setlocale("LC_ALL", "en_US.UTF-8")
library(swirl)
swirl()
data("iris")
head(iris)
x <- iris$Sepal.Length
y <- iris$Petal.Length
z <- iris$Sepal.Width
?rgl
open3d()
plot3d(iris$Sepal.Length, iris$Petal.Length, iris$Sepal.Width)
plot3d()
?plot3d()
plot3d(rgl)
library(rgl)
bye()
library(rgl)
?`rgl-package`
?rgl
plot3d(iris$Sepal.Length, iris$Petal.Length, iris$Sepal.Width)
detach("package:rgl", unload=TRUE)
plot3d(iris$Sepal.Length, iris$Petal.Length, iris$Sepal.Width)
library("rgl", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
plot3d(iris$Sepal.Length, iris$Petal.Length, iris$Sepal.Width)
library(swirl)
swirl()
data("diamonds")
View(diamonds)
?qplot
qplot(color,data=diamonds)
qplot(carat, price, data=diamonds)
qplot(log(carat), log(price), data=diamonds)
qplot(carat, x*y*z, data=diamonds)
qplot(carat, price, data=diamonds, color=color)
qplot(carat, price, data=diamonds, shape=cut)
qplot(carat, price, data=diamonds, alpha=I(1/10))
qplot(carat, price, data=diamonds, alpha=I(1/100))
qplot(carat, price, data=diamonds, size=table)
qplot(carat, price, data=diamonds, facets = color ~ .)
qplot(carat, price, data=diamonds, geom=c("point", "smooth"))
qplot(color, price/carat, data=diamonds, geom="jitter")
qplot(color, price/carat, data=diamonds, geom="boxplot")
?Normal
help("Distributions")
?rbinom
rbinom(1,7,0.5)
resultado <- rbinom(100000,100000,0.5)
resultado <- rbinom(100000,7,0.5)
tail(resultado)
tail(resultado > 5)
mean(resultado >5)
?set.seed
library("swirl")
swirl()
swirl()
Sys.setlocale("LC_ALL", "en_US.UTF-8")
data("diamonds")
View(diamonds)
?qplot
qplot(color, data=diamonds)
qplot(carat, cut, data=diamonds)
qplot(carat, price, data=diamonds)
qplot(log(carat), log(price), data=diamonds)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds)
qplot(carat, x*y*z, data=diamonds)
qplot(carat, price, data=diamonds, color=color)
install.packages(RMySQL)
bye
